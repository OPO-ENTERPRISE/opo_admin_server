// Script de inicializaci√≥n de MongoDB para el servidor de administraci√≥n
// Este script se ejecuta autom√°ticamente cuando se crea el contenedor de MongoDB

// Crear base de datos
db = db.getSiblingDB('opo');

// Crear colecci√≥n user
db.createCollection('user');

// Crear colecci√≥n topics_uuid_map
db.createCollection('topics_uuid_map');

// Crear colecci√≥n apps
db.createCollection('apps');

// Insertar datos iniciales de apps
db.apps.insertMany([
  {
    "_id": "1",
    "id": "1",
    "name": "Polic√≠a Nacional",
    "description": "√Årea polic√≠a nacional",
    "enabled": false, // L√≥gica invertida: false = habilitado
    "order": 1,
    "createdAt": new Date().toISOString(),
    "updatedAt": new Date().toISOString()
  },
  {
    "_id": "2", 
    "id": "2",
    "name": "Polic√≠a Local/Guardia Civil",
    "description": "√Årea polic√≠a local y guardia civil",
    "enabled": false, // L√≥gica invertida: false = habilitado
    "order": 2,
    "createdAt": new Date().toISOString(),
    "updatedAt": new Date().toISOString()
  }
]);

// Crear √≠ndices para optimizar consultas
db.user.createIndex({ "email": 1 }, { unique: true });
db.topics_uuid_map.createIndex({ "id": 1 }, { unique: true });
db.topics_uuid_map.createIndex({ "uuid": 1 }, { unique: true });
db.topics_uuid_map.createIndex({ "area": 1 });
db.topics_uuid_map.createIndex({ "enabled": 1 });
db.topics_uuid_map.createIndex({ "rootId": 1 });
db.topics_uuid_map.createIndex({ "area": 1, "enabled": 1 });

print('‚úÖ Base de datos inicializada correctamente');
print('üìä Colecciones creadas: user, topics_uuid_map, apps');
print('üîç √çndices creados para optimizar consultas');
print('üè¢ Apps iniciales insertadas: PN (1) y PS (2)');
